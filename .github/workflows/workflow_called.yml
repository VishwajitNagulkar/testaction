name: ifcalled123

on:
  workflow_call:
    inputs:
      user:
        required: true
        type: string
      images:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      severity:
        required: true
        type: string
      registry1:
        required: true
        type: string
      
    secrets:
      aws-access-key-id:
        description: 'aws access keys'
        required: true
      aws-secret-access-key:
        description: 'aws secret access keys'
        required: true
      username:
        description: 'dockerhub username'
        required: true
      password:
        description: 'dockerhub password'
        required: true

jobs:
  build-image:
    name: Build Images
    runs-on: ubuntu-latest

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Build and export to Docker
        id: build-id
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_number }}
          platforms: linux/amd64

      - name: Docker Scan with trivy (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
#          image-ref: ${{ github.run_number }}
         image-ref: ${{ steps.build-id.outputs.tags }}
         format: table 
         exit-code: 0

      - name: Docker Scan with trivy (blocking)
        uses: aquasecurity/trivy-action@master
        with:
         image-ref: ${{ github.run_number }}
         format: table 
         exit-code: 1
        #  severity: 'HIGH,CRITICAL'
         severity: ${{ inputs.severity}}
       
      
      
      - name: Push docker image to DOCKERHUB
        if: ${{ inputs.registry1 == 'DOCKERHUB' }}
        env:
          IMAGE_TAG: ${{ github.run_number }}
          images: ${{ inputs.images }}
          
          
        run: |
          docker build -t $images:$IMAGE_TAG .
          docker push $images:$IMAGE_TAG

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push docker image to Amazon ECR
        if: ${{ inputs.registry1 == 'ECR' }}
        id: docker-build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push docker image to Amazon ECR and DOCKERHUB
        if: ${{ inputs.registry1 == 'DOCKERHUB,ECR' }}
#         id: docker-build
        env:
          ## For ECR
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.run_number }}
          ## For DOCKERHUB
          images: ${{ inputs.images }}
          
          
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          docker build -t $images:$IMAGE_TAG .
          docker push $images:$IMAGE_TAG
          
